syntax = "proto3";
package proto;

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

// Highlight structure
message Highlight {
    repeated string field = 1;
}

// Result structure
message Result {
    string source = 1;
    map<string, Highlight> highlight = 2;
}

// Game search Result
message GameResult {
    string source = 1;
    string id = 2;
    map<string, Highlight> highlight = 3;
}

// Game info for index
message GameIndexRequest {
    int32 pageSize = 1;
    int32 page = 2;
}

message GameIndexResponse {
    repeated GameResult result = 1;
}

// Resource info for index
message ResourceIndexRequest {
    int32 pageSize = 1;
    int32 page = 2;
}

message ResourceIndexResponse {
    repeated string result = 1;
}

// Global search
message GlobalSearchRequest {
    string keyword = 1;
    int32 size = 2;
}

message GlobalSearchResponse {
    repeated GameResult gameResult = 1;
    repeated Result resourceResult = 2;
}

// Game search
message Filter {
    string type = 1;
    string value = 2;

}

message GameSearchRequest {
    repeated Filter filter = 1;
    string keyword = 2;
    int32 size = 3;
}

message GameSearchResponse {
    repeated GameResult result = 1;
}

// News search
message NewsSearchRequest {
    string keyword = 1;
    int32 size = 2;
}

message NewsSearchResponse {
    repeated Result result = 1;
}

// Raiders search
message RaidersSearchRequest {
    string keyword = 1;
    int32 size = 2;
}

message RaidersSearchResponse {
    repeated Result result = 1;
}

// Video search
message VideoSearchRequest {
    string keyword = 1;
    int32 size = 2;
}

message VideoSearchResponse {
    repeated Result result = 1;
}

// Game news
message GameNewsGetRequest {
    string gameName = 1;
    int32 size = 2;
}

message GameNewsGetResponse {
    repeated string result = 1;
}

// Game raiders
message GameRaidersGetRequest {
    string gameName = 1;
    int32 size = 2;
}

message GameRaidersGetResponse {
    repeated string result = 1;
}

// Game video
message GameVideoGetRequest {
    string gameName = 1;
    int32 size = 2;
}

message GameVideoGetResponse {
    repeated string result = 1;
}

// Server
service ScheduleService {
    rpc GameIndex (GameIndexRequest) returns (GameIndexResponse) {
        option (google.api.http) = {
            post: "/game/index"
            body: "*"
        };
    }

    rpc ResourceIndex (ResourceIndexRequest) returns (ResourceIndexResponse) {
        option (google.api.http) = {
            post: "/resource/index"
            body: "*"
        };
    }

    rpc GlobalSearch (GlobalSearchRequest) returns (GlobalSearchResponse) {
        option (google.api.http) = {
            post: "/global"
            body: "*"
        };
    }

    rpc GameSearch (GameSearchRequest) returns (GameSearchResponse) {
        option (google.api.http) = {
            post: "/game"
            body: "*"
        };
    }

    rpc NewsSearch (NewsSearchRequest) returns (NewsSearchResponse) {
        option (google.api.http) = {
            post: "/news"
            body: "*"
        };
    }

    rpc RaidersSearch (RaidersSearchRequest) returns (RaidersSearchResponse) {
        option (google.api.http) = {
            post: "/raiders"
            body: "*"
        };
    }

    rpc VideoSearch (VideoSearchRequest) returns (VideoSearchResponse) {
        option (google.api.http) = {
            post: "/video"
            body: "*"
        };
    }

    rpc GameNewsGet (GameNewsGetRequest) returns (GameNewsGetResponse) {
        option (google.api.http) = {
            post: "/game/news"
            body: "*"
        };
    }

    rpc GameRaidersGet (GameRaidersGetRequest) returns (GameRaidersGetResponse) {
        option (google.api.http) = {
            post: "/game/raiders"
            body: "*"
        };
    }

    rpc GameVideoGet (GameVideoGetRequest) returns (GameVideoGetResponse) {
        option (google.api.http) = {
            post: "/game/video"
            body: "*"
        };
    }
}
